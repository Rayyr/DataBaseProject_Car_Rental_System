package com.mycompany.car_rental_system;

import com.toedter.calendar.JCalendar;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Cust_Booking extends javax.swing.JFrame {

    JCalendar start_cale;
    JCalendar end_cale;
    Connection con;
    DefaultComboBoxModel model;
    int cus_iD;
    

    public void make_connector() {

        try {

            DriverManager.registerDriver(new org.postgresql.Driver());
            String info = "jdbc:postgresql://localhost:5432/postgres";
            con = DriverManager.getConnection(info, "ban", "ban123");

        } catch (Exception ex) {
            //since we have an error with data base so we must to exit our application 
            JOptionPane.showMessageDialog(null, "Error Happens With Your Data Base Connection!", "Data Base Error", JOptionPane.ERROR_MESSAGE + JOptionPane.OK_OPTION);
            System.exit(0);
        }

    }

    //Creates new form Cust_Booking
    public Cust_Booking() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setResizable(false);
    }

    public Cust_Booking(int cus_iD,int current_booking_num) {
        initComponents();
        this.cus_iD = cus_iD;
        

        this.writevalue_label.setVisible(false);
        this.creteriavalue_compobox.setVisible(false);
        this.show_result_btn.setEnabled(false);

        model = (DefaultComboBoxModel) this.creteriavalue_compobox.getModel();

        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        goback_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        show_result_btn = new javax.swing.JButton();
        startdate_btn = new javax.swing.JButton();
        enddate_btn = new javax.swing.JButton();
        startdate_label = new javax.swing.JLabel();
        enddate_label = new javax.swing.JLabel();
        writevalue_label = new javax.swing.JLabel();
        creteria_compobox = new javax.swing.JComboBox<>();
        creteriavalue_compobox = new javax.swing.JComboBox<>();
        reset_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Make Booking");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(82, 140, 197));
        jLabel3.setText("Start Date");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(82, 140, 197));
        jLabel4.setText("Return Date");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        goback_btn.setBackground(new java.awt.Color(82, 140, 197));
        goback_btn.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        goback_btn.setForeground(new java.awt.Color(255, 255, 255));
        goback_btn.setText("Go Back");
        goback_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        goback_btn.setFocusable(false);
        goback_btn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        goback_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goback_btnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(82, 140, 197));
        jLabel2.setText("Choose The Filterartion Creteria   ");

        show_result_btn.setBackground(new java.awt.Color(82, 140, 197));
        show_result_btn.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        show_result_btn.setForeground(new java.awt.Color(255, 255, 255));
        show_result_btn.setText("Show The Results ");
        show_result_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        show_result_btn.setFocusable(false);
        show_result_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_result_btnActionPerformed(evt);
            }
        });

        startdate_btn.setBackground(new java.awt.Color(82, 140, 197));
        startdate_btn.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        startdate_btn.setForeground(new java.awt.Color(255, 255, 255));
        startdate_btn.setText("Choose");
        startdate_btn.setFocusable(false);
        startdate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startdate_btnActionPerformed(evt);
            }
        });

        enddate_btn.setBackground(new java.awt.Color(82, 140, 197));
        enddate_btn.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        enddate_btn.setForeground(new java.awt.Color(255, 255, 255));
        enddate_btn.setText("Choose");
        enddate_btn.setFocusable(false);
        enddate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enddate_btnActionPerformed(evt);
            }
        });

        startdate_label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        startdate_label.setForeground(new java.awt.Color(137, 123, 203));

        enddate_label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        enddate_label.setForeground(new java.awt.Color(137, 123, 203));

        writevalue_label.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        writevalue_label.setForeground(new java.awt.Color(82, 140, 197));
        writevalue_label.setText("Write Your Creteria Value :");

        creteria_compobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brand", "Color", "Purpose", "Cost" }));
        creteria_compobox.setSelectedIndex(-1);
        creteria_compobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                creteria_compoboxItemStateChanged(evt);
            }
        });

        reset_btn.setBackground(new java.awt.Color(82, 140, 197));
        reset_btn.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        reset_btn.setForeground(new java.awt.Color(255, 255, 255));
        reset_btn.setText("Reset");
        reset_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reset_btn.setFocusable(false);
        reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(show_result_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(startdate_btn))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(enddate_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGap(161, 161, 161)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(startdate_label, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(enddate_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(writevalue_label, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(45, 45, 45)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(creteria_compobox, 0, 163, Short.MAX_VALUE)
                                        .addComponent(creteriavalue_compobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(goback_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(reset_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(startdate_btn)
                    .addComponent(startdate_label, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(enddate_btn)
                    .addComponent(enddate_label, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creteria_compobox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creteriavalue_compobox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(writevalue_label, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(show_result_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addComponent(reset_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(goback_btn)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_btnActionPerformed
        // it is used to reset the values to research with deffernt values

        this.startdate_label.setText(null);
        this.enddate_label.setText(null);

        this.creteria_compobox.setEnabled(true);
        this.creteria_compobox.setSelectedIndex(-1);

        this.writevalue_label.setVisible(false);

        this.model.removeAllElements();
        this.creteriavalue_compobox.removeAllItems();
        this.creteriavalue_compobox.repaint();

        this.creteriavalue_compobox.setVisible(false);

        this.show_result_btn.setEnabled(false);

    }//GEN-LAST:event_reset_btnActionPerformed

    private void creteria_compoboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_creteria_compoboxItemStateChanged
        // we need to enable user to write the value to search about aince the state changeed so he choose the creteria he need

        if (this.creteria_compobox.getSelectedIndex() != -1) {
            String selectedItem = this.creteria_compobox.getSelectedItem().toString();
            this.creteriavalue_compobox.removeAllItems(); // Clear previous items

            switch (selectedItem) {
                case "Brand":
                this.writevalue_label.setText("Choose Brand : ");
                this.writevalue_label.setVisible(true);
                load_brands_on_box();
                this.creteriavalue_compobox.setVisible(true);
                this.creteria_compobox.setEnabled(false);

                break;

                case "Cost":
                this.writevalue_label.setText("Choose Cost : ");
                this.writevalue_label.setVisible(true);
                load_costs_on_box();
                this.creteriavalue_compobox.setVisible(true);
                this.creteria_compobox.setEnabled(false);
                break;

                case "Purpose":
                this.writevalue_label.setText("Choose Purpose : ");
                this.writevalue_label.setVisible(true);
                load_purposes_on_box();
                this.creteriavalue_compobox.setVisible(true);
                this.creteria_compobox.setEnabled(false);
                break;

                case "Color":
                this.writevalue_label.setText("Choose Color : ");
                this.writevalue_label.setVisible(true);
                load_colors_on_box();
                this.creteriavalue_compobox.setVisible(true);
                this.creteria_compobox.setEnabled(false);
                break;

            }
            this.show_result_btn.setEnabled(true);
        }
    }//GEN-LAST:event_creteria_compoboxItemStateChanged

    private void enddate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enddate_btnActionPerformed
        // display the calender to choose the start date pf rental

        end_cale = new JCalendar();
        JOptionPane.showMessageDialog(null, end_cale, "Start Rental Date", JOptionPane.OK_OPTION + JOptionPane.PLAIN_MESSAGE);

        Date f = (Date) end_cale.getDate();
        Date selectedDate = end_cale.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String formattedDate = dateFormat.format(selectedDate);
        this.enddate_label.setText(formattedDate);

    }//GEN-LAST:event_enddate_btnActionPerformed

    private void startdate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startdate_btnActionPerformed
        // display the calender to choose the start date pf rental

        start_cale = new JCalendar();
        JOptionPane.showMessageDialog(null, start_cale, "Start Rental Date", JOptionPane.OK_OPTION + JOptionPane.PLAIN_MESSAGE);

        Date f = (Date) start_cale.getDate();
        Date selectedDate = start_cale.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String formattedDate = dateFormat.format(selectedDate);
        this.startdate_label.setText(formattedDate);

    }//GEN-LAST:event_startdate_btnActionPerformed

    private void show_result_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_result_btnActionPerformed
        // move to brand/color/purpose/cost pages based to the selected item from the snipper

        //get the selected item
        String selectedItem = this.creteria_compobox.getSelectedItem().toString();
        Date Start1 = (Date) start_cale.getDate();
        Date end1 = (Date) end_cale.getDate();

        switch (selectedItem) {
            case "Brand":
            //we will show the results based to the chosen creteria value , so we will pass it by the constructor
            /* here only we find the count because i load the brands from veichketype table not a veichle so we may
            // have or not cars with this brand , but the color, cost .... they will loaded to the box
            // based to the veichke table so for sure all the items of the box are founded in the veichke table
            //that means at least we will have i matchable car
            */
            if (count_car_based_to_brand(this.creteriavalue_compobox.getSelectedItem().toString()) == 0) {
                JOptionPane.showMessageDialog(null, "Sorry , No Data Found !", "Not Found Data", JOptionPane.WARNING_MESSAGE + JOptionPane.OK_OPTION);
                //generate a dummy event to reinitialize the written values
                this.reset_btnActionPerformed(null);
                break;
            }
            new brandResults(this.creteriavalue_compobox.getSelectedItem().toString(), Start1, end1,cus_iD).setVisible(true);
            this.reset_btnActionPerformed(null);

            break;

            case "Cost":
            new costResults(Integer.parseInt(this.creteriavalue_compobox.getSelectedItem().toString()), Start1, end1,cus_iD).setVisible(true);
            this.reset_btnActionPerformed(null);

            break;

            case "Purpose":
            new purposeResults(this.creteriavalue_compobox.getSelectedItem().toString(), Start1, end1,cus_iD ).setVisible(true);
            this.reset_btnActionPerformed(null);

            break;

            case "Color":
            new colorResults(this.creteriavalue_compobox.getSelectedItem().toString(), Start1, end1, cus_iD).setVisible(true);
            this.reset_btnActionPerformed(null);
            break;

        }

    }//GEN-LAST:event_show_result_btnActionPerformed

    private void goback_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goback_btnActionPerformed

        this.dispose();
    }//GEN-LAST:event_goback_btnActionPerformed

    public int count_car_based_to_brand(String brand_name) {

        make_connector();
        int res = 0;

        try {

            con.setAutoCommit(false);
            String q1 = "select veichletypeid from veichletype where brandname='" + brand_name + "'";
            Statement s = con.createStatement();
            ResultSet r1 = s.executeQuery(q1);
            r1.next();

            String q = "select COUNT(*) from veichle where veichletypeid='" + r1.getInt("veichletypeid") + "'";//by default tehy are unique so there is no need to use ditinict
            s = con.createStatement();
            ResultSet r = s.executeQuery(q);

            //to fetch the rows 
            if (r.next() == true) {

                res = r.getInt(1);
            }

            con.commit();
            con.close();
            con = null;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Happens With Your Data Base Connection!", "Data Base Error", JOptionPane.ERROR_MESSAGE + JOptionPane.OK_OPTION);
            System.exit(0);

        }

        return res;

    }




    public void load_brands_on_box() {

        make_connector();

        try {

            con.setAutoCommit(false);
            String q = "select brandname from veichletype";//by default tehy are unique so there is no need to use ditinict
            Statement s = con.createStatement();
            ResultSet r = s.executeQuery(q);

            //to fetch the rows 
            while (r.next() == true) {

                model.addElement(r.getString("brandname"));
                // this.creteriavalue_compobox.addItem(r.getString("brandname"));

            }

            con.commit();
            con.close();
            con = null;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Happens With Your Data Base Connection!", "Data Base Error", JOptionPane.ERROR_MESSAGE + JOptionPane.OK_OPTION);
            System.exit(0);

        }

        return;
    }

    public void load_colors_on_box() {
        make_connector();

        try {

            con.setAutoCommit(false);
            String q = "select DISTINCT  color from veichle";
            Statement s = con.createStatement();
            ResultSet r = s.executeQuery(q);

            //to fetch the rows 
            while (r.next() == true) {

                model.addElement(r.getString("color"));
                //  this.creteriavalue_compobox.addItem(r.getString("color"));

            }

            con.commit();
            con.close();
            con = null;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Happens With Your Data Base Connection!", "Data Base Error", JOptionPane.ERROR_MESSAGE + JOptionPane.OK_OPTION);
            System.exit(0);

        }

        return;

    }

    public void load_costs_on_box() {

        make_connector();

        try {

            con.setAutoCommit(false);
            String q = "select DISTINCT priceperday from veichle";
            Statement s = con.createStatement();
            ResultSet r = s.executeQuery(q);

            //to fetch the rows 
            while (r.next() == true) {

                model.addElement(r.getInt("priceperday"));
                // this.creteriavalue_compobox.addItem(r.getString("priceperday"));

            }

            con.commit();
            con.close();
            con = null;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Happens With Your Data Base Connection!", "Data Base Error", JOptionPane.ERROR_MESSAGE + JOptionPane.OK_OPTION);
            System.exit(0);

        }

        return;

    }

    public void load_purposes_on_box() {

        make_connector();

        try {

            con.setAutoCommit(false);
            String q = "select DISTINCT purpose from veichle";
            Statement s = con.createStatement();
            ResultSet r = s.executeQuery(q);

            //to fetch the rows 
            while (r.next() == true) {

                model.addElement(r.getString("purpose"));
                //this.creteriavalue_compobox.addItem(r.getString("purpose"));

            }

            con.commit();
            con.close();
            con = null;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Happens With Your Data Base Connection!", "Data Base Error", JOptionPane.ERROR_MESSAGE + JOptionPane.OK_OPTION);
            System.exit(0);

        }

        return;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cust_Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cust_Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cust_Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cust_Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cust_Booking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> creteria_compobox;
    private javax.swing.JComboBox<Object> creteriavalue_compobox;
    private javax.swing.JButton enddate_btn;
    private javax.swing.JLabel enddate_label;
    private javax.swing.JButton goback_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton reset_btn;
    private javax.swing.JButton show_result_btn;
    private javax.swing.JButton startdate_btn;
    private javax.swing.JLabel startdate_label;
    private javax.swing.JLabel writevalue_label;
    // End of variables declaration//GEN-END:variables
}
